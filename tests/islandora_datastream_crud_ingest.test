<?php

/**
 * @file
 * Attempts to ingest an image into a randomly generated image collection.
 */

class IslandoraDatastreamCrudIngestTestCase extends IslandoraCollectionWebTestCase {

  /**
   * Get test information.
   *
   * @see IslandoraWebTestCase::getInfo()
   */
  public static function getInfo() {
    return array(
      'name' => 'Islandora Datastream CRUD Image Ingest',
      'description' => 'Ingests an image into a randomly generated image collection',
      'group' => 'Islandora Datastream CRUD',
    );
  }

  /**
   * Set up the test environment.
   *
   * @see IslandoraWebTestCase::setUp()
   */
  public function setUp() {
    parent::setUp(array(
      'islandora',
      'islandora_basic_image',
      'islandora_basic_collection',
      'islandora_solr',
      'islandora_batch',
      'islandora_datastream_crud',
    ));
  }

  /**
   * Creates an administrative user and attempts to ingest a test image.
   */
  public function testIngestPurgeBasicImage() {
    $user = $this->drupalCreateUser(array(
      'view fedora repository objects',
      'ingest fedora objects',
      'administer site configuration',
      'manage object properties',
      'delete fedora objects and datastreams',
      'create child collection',
    ));
    $this->drupalLogin($user);

    $this->createTestCollection($label, 'islandora:sp_basic_image', 'islandora:testcollection');

    $batch_target_dir = drupal_get_path('module', 'islandora_datastream_crud') . '/tests/fixtures/batch_ingest';
    $batch_ingest_cmd = "drush -v -u 1 islandora_batch_scan_preprocess --content_models=islandora:sp_basic_image --parent=islandora:testcollection --parent_relationship_pred=isMemberOfCollection --type=directory --namespace=testing --target=" . $batch_target_dir;
    exec($batch_ingest_cmd);
    exec("drush -v -u 1 islandora_batch_ingest");

    $pids = array('testing:1', 'testing:2', 'testing:3');
    foreach ($pids as $pid) {
      $object = $this->getObjectFromPath('islandora/object/' . $pid);
      $datastreams = array(
        'RELS-EXT',
        'DC',
        'OBJ',
        'TN',
        'MEDIUM_SIZE',
      );
      $this->assertDatastreams($object, $datastreams);
    }
  }
}
